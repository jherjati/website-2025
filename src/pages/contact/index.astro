---
import Hero from "../../components/contact/Hero.astro";
import ContactForm from "../../components/contact/ContactForm.astro";
import Offices from "../../components/contact/Offices.astro";
import Layout from "../../layouts/Layout.astro";
---

<Layout theme="dark" hideGridOnMobile={true}>
    <div class="min-h-screen">
        <Hero />
        <ContactForm />
        <Offices />
    </div>

    <!-- Toast Notification - shown when success query param is present -->
    <div
        id="success-toast"
        x-data="{ show: false }"
        x-init="
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.get('success') === 'true') {
                show = true;
                setTimeout(() => show = false, 5000);
            }
        "
        x-show="show"
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0 translate-y-4"
        x-transition:enter-end="opacity-100 translate-y-0"
        x-transition:leave="transition ease-in duration-200"
        x-transition:leave-start="opacity-100 translate-y-0"
        x-transition:leave-end="opacity-0 translate-y-4"
        class="fixed bottom-6 right-6 z-50 max-w-sm w-full mx-4 md:mx-0"
        style="display: none;"
    >
        <div class="p-4 rounded-sm shadow-lg border bg-green-900/90 border-green-700 text-green-100">
            <div class="flex items-start justify-between gap-3">
                <p class="text-sm flex-1">
                    Thank you! Your message has been sent successfully.
                </p>
                <button
                    @click="show = false"
                    class="text-current opacity-70 hover:opacity-100 transition-opacity"
                >
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
        </div>
    </div>
</Layout>

<script is:inline client:load>
    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add("visible");
                }
            });
        },
        { threshold: 0.1 },
    );

    // Observe all animated elements
    document
        .querySelectorAll(".fade-in-up")
        .forEach((el) => observer.observe(el));
</script>

<style is:global>
    /* Initial hidden state */
    .fade-in-up {
        opacity: 0;
        transform: translateY(30px);
    }

    /* Animation when visible */
    .fade-in-up.visible {
        animation: fadeInUp 0.75s ease-out forwards;
    }

    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
