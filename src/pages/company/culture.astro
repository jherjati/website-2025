---
import Hero from "../../components/culture/Hero.astro";
import CTA from "../../components/culture/CTA.astro";
import Main from "../../components/culture/Main.astro";
import Layout from "../../layouts/Layout.astro";
---

<Layout theme="dark" isBlack={true}><Hero /><Main /><CTA /></Layout>

<script is:inline client:load>
    const script = document.createElement("script");
    script.src =
        "https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.13.0/lottie.min.js";
    script.onload = () => {
        window.lottie.loadAnimation({
            container: document.getElementById("canvas-1"),
            renderer: "canvas", // svg / canvas / html
            loop: true,
            autoplay: true,
            path: "/animation/culture.json",
        });
    };
    document.body.appendChild(script);

    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    entry.target.classList.add("visible");
                }
            });
        },
        { threshold: 0.1 },
    );

    // Observe all animated elements
    document
        .querySelectorAll(".fade-in-up")
        .forEach((el) => observer.observe(el));
</script>

<style is:global>
    .typo-poin h1,
    .typo-poin h2,
    .typo-poin h3,
    .typo-poin h4,
    .typo-poin h5,
    .typo-poin h6 {
        font-family: "Host-Grotesk", sans-serif;
    }

    .gradient-border-1 {
        position: relative;
        border-radius: 4px;
    }

    .gradient-border-1::before {
        content: "";
        position: absolute;
        inset: 0;
        padding: 1px;
        background: #232221;
        border-radius: inherit;
        mask:
            linear-gradient(#000 0 0) content-box,
            linear-gradient(#000 0 0);
        mask-composite: xor;
        -webkit-mask-composite: xor;
        transition: background 0.3s ease; /* Smooth transition */
    }

    .gradient-border-1:hover::before {
        background: linear-gradient(
            180deg,
            rgba(205, 84, 27, 0),
            rgb(243, 106, 29)
        );
    }

    /* Initial hidden state */
    .fade-in-up {
        opacity: 0;
        transform: translateY(30px);
    }

    /* Animation when visible */
    .fade-in-up.visible {
        animation: fadeInUp 0.75s ease-out forwards;
    }

    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
