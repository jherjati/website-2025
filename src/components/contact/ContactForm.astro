---
import Select from "./Select.astro";
import Textarea from "./Textarea.astro";
import TextInput from "./TextInput.astro";

const countries = [
  "Afghanistan",
  "Albania",
  "Algeria",
  "Andorra",
  "Angola",
  "Antigua and Barbuda",
  "Argentina",
  "Armenia",
  "Australia",
  "Austria",
  "Azerbaijan",
  "Bahamas",
  "Bahrain",
  "Bangladesh",
  "Barbados",
  "Belarus",
  "Belgium",
  "Belize",
  "Benin",
  "Bhutan",
  "Bolivia",
  "Bosnia and Herzegovina",
  "Botswana",
  "Brazil",
  "Brunei",
  "Bulgaria",
  "Burkina Faso",
  "Burundi",
  "Cabo Verde",
  "Cambodia",
  "Cameroon",
  "Canada",
  "Central African Republic",
  "Chad",
  "Chile",
  "China",
  "Colombia",
  "Comoros",
  "Congo",
  "Costa Rica",
  "Croatia",
  "Cuba",
  "Cyprus",
  "Czech Republic",
  "Denmark",
  "Djibouti",
  "Dominica",
  "Dominican Republic",
  "Ecuador",
  "Egypt",
  "El Salvador",
  "Equatorial Guinea",
  "Eritrea",
  "Estonia",
  "Eswatini",
  "Ethiopia",
  "Fiji",
  "Finland",
  "France",
  "Gabon",
  "Gambia",
  "Georgia",
  "Germany",
  "Ghana",
  "Greece",
  "Grenada",
  "Guatemala",
  "Guinea",
  "Guinea-Bissau",
  "Guyana",
  "Haiti",
  "Honduras",
  "Hungary",
  "Iceland",
  "India",
  "Indonesia",
  "Iran",
  "Iraq",
  "Ireland",
  "Israel",
  "Italy",
  "Jamaica",
  "Japan",
  "Jordan",
  "Kazakhstan",
  "Kenya",
  "Kiribati",
  "Kosovo",
  "Kuwait",
  "Kyrgyzstan",
  "Laos",
  "Latvia",
  "Lebanon",
  "Lesotho",
  "Liberia",
  "Libya",
  "Liechtenstein",
  "Lithuania",
  "Luxembourg",
  "Madagascar",
  "Malawi",
  "Malaysia",
  "Maldives",
  "Mali",
  "Malta",
  "Marshall Islands",
  "Mauritania",
  "Mauritius",
  "Mexico",
  "Micronesia",
  "Moldova",
  "Monaco",
  "Mongolia",
  "Montenegro",
  "Morocco",
  "Mozambique",
  "Myanmar",
  "Namibia",
  "Nauru",
  "Nepal",
  "Netherlands",
  "New Zealand",
  "Nicaragua",
  "Niger",
  "Nigeria",
  "North Korea",
  "North Macedonia",
  "Norway",
  "Oman",
  "Pakistan",
  "Palau",
  "Palestine",
  "Panama",
  "Papua New Guinea",
  "Paraguay",
  "Peru",
  "Philippines",
  "Poland",
  "Portugal",
  "Qatar",
  "Romania",
  "Russia",
  "Rwanda",
  "Saint Kitts and Nevis",
  "Saint Lucia",
  "Saint Vincent and the Grenadines",
  "Samoa",
  "San Marino",
  "Sao Tome and Principe",
  "Saudi Arabia",
  "Senegal",
  "Serbia",
  "Seychelles",
  "Sierra Leone",
  "Singapore",
  "Slovakia",
  "Slovenia",
  "Solomon Islands",
  "Somalia",
  "South Africa",
  "South Korea",
  "South Sudan",
  "Spain",
  "Sri Lanka",
  "Sudan",
  "Suriname",
  "Sweden",
  "Switzerland",
  "Syria",
  "Taiwan",
  "Tajikistan",
  "Tanzania",
  "Thailand",
  "Timor-Leste",
  "Togo",
  "Tonga",
  "Trinidad and Tobago",
  "Tunisia",
  "Turkey",
  "Turkmenistan",
  "Tuvalu",
  "Uganda",
  "Ukraine",
  "United Arab Emirates",
  "United Kingdom",
  "United States",
  "Uruguay",
  "Uzbekistan",
  "Vanuatu",
  "Vatican City",
  "Venezuela",
  "Vietnam",
  "Yemen",
  "Zambia",
  "Zimbabwe"
];

const countryOptions = countries.map(country => ({
  value: country,
  label: country
}));

const apiToken = import.meta.env.PUBLIC_DIRECTUS_SEARCH_TOKEN;
---

<section class='py-12 lg:py-24 lg:mx-6 lg:border border-[#232221]'>
  <div class='flex flex-col md:flex-row w-full gap-8'>
    <div
      class='hidden md:block md:w-[30%] fade-in-up'
      style='animation-delay: 750ms;'
    >
      <div class='w-full'>
        <p class='text-stone-100 text-xl mb-2'>Contact Us</p>
        <h2 class='text-stone-100 text-3xl lg:text-4xl mt-6 leading-12'>
          How might we help you?
        </h2>
      </div>
    </div>

    <form
      id='contact-form'
      class='space-y-6 w-full md:w-[95%] bg-neutral-900 p-6 lg:border-y border-[#232221] fade-in-up'
      style='animation-delay: 1000ms;'
    >
      <div class='md:hidden mb-6'>
        <p class='text-stone-100 text-xl mb-2'>Contact Us</p>
        <h2 class='text-stone-100 text-3xl leading-tight'>
          How might we help you?
        </h2>
      </div>

      <div class='grid lg:grid-cols-2 gap-4'>
        <TextInput label='First Name' name='first_name' />
        <TextInput label='Last Name' name='last_name' />
      </div>

      <div class='grid lg:grid-cols-2 gap-4'>
        <TextInput type='email' label='Email' name='email' />
        <Select label='Country/Region' options={countryOptions} name='country' />
      </div>

      <div class='grid lg:grid-cols-2 gap-4'>
        <TextInput label='Company Name' name='company' />
        <TextInput label='Job Title' name='title' />
      </div>

      <TextInput type='tel' label='Phone Number' name='phone_number' />

      <Textarea
        label='Message'
        placeholder='Describe your project, inquiries, or needs...'
        name='message'
      />

      <div class='flex flex-col-reverse lg:flex-row lg:items-center lg:justify-between gap-4'>
        <label
          class='flex items-start space-x-3 text-stone-300 text-sm cursor-pointer'
        >
          <input
            type='checkbox'
            name='subscribe'
            class='mt-1 w-4 h-4 bg-neutral-800 border border-neutral-700 rounded accent-neutral-700'
          />
          <span
            >I would like to receive updates and news from Braga Technologies by
            email.</span
          >
        </label>
        <button
          type='submit'
          id='submit-btn'
          class='bg-orange-600 hover:bg-orange-700 text-stone-100 px-8 py-3 rounded-sm transition-colors font-medium w-full lg:w-auto disabled:opacity-50 disabled:cursor-not-allowed'
        >
          Send
        </button>
      </div>
    </form>
  </div>
</section>

<script define:vars={{ apiToken }} is:inline>
  const form = document.getElementById('contact-form');
  const submitBtn = document.getElementById('submit-btn');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Disable submit button
    submitBtn.disabled = true;
    submitBtn.textContent = 'Sending...';

    // Get form data
    const formData = new FormData(form);

    // Prepare the request body
    const body = {
      first_name: formData.get('first_name'),
      last_name: formData.get('last_name'),
      email: formData.get('email'),
      country: formData.get('country'),
      company: formData.get('company'),
      title: formData.get('title'),
      phone_number: formData.get('phone_number'),
      message: formData.get('message'),
      subscribe: formData.get('subscribe') === 'on',
      date_created: new Date().toISOString()
    };

    try {
      const response = await fetch('https://panel.braga.co.id/panel/items/web_2025_messages', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${apiToken}`
        },
        body: JSON.stringify(body)
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      const messageId = result.data?.id || result.id;

      // Redirect to the success page with query parameter
      window.location.href = `/contact?success=true&id=${messageId}`;

    } catch (error) {
      console.error('Error submitting form:', error);
      alert('Sorry, there was an error sending your message. Please try again.');
    } finally {
      // Re-enable submit button
      submitBtn.disabled = false;
      submitBtn.textContent = 'Send';
    }
  });
</script>
