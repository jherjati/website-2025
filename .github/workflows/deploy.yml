name: Deploy Astro to S3

on:
  push:
    branches: [ deploy ]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build Astro
        run: pnpm run build
        # pastikan script "build" sudah ada di package.json â†’ "astro build"
        # output default: ./dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Sinkronisasi ke S3
      - name: Sync to S3
        run: |
          aws s3 sync ./dist s3://${{ secrets.S3_BUCKET }} \
            --delete \
            --cache-control "public, max-age=300"

      # Aturan cache lebih agresif utk aset fingerprinted (opsional)
      # - name: Set long cache for hashed assets
      #   run: |
      #     aws s3 cp s3://${{ secrets.S3_BUCKET }}/_astro/ s3://${{ secrets.S3_BUCKET }}/_astro/ \
      #       --recursive \
      #       --metadata-directive REPLACE \
      #       --cache-control "public, max-age=31536000, immutable" \

      # Invalidate CloudFront (opsional)
      # - name: Invalidate CloudFront
      #   if: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
      #   run: |
      #     aws cloudfront create-invalidation \
      #       --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
      #       --paths "/*"
